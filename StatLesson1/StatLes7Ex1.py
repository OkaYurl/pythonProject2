"""
Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
Используя математические операции, посчитать коэффициенты линейной регрессии,
приняв за X заработную плату (то есть, zp - признак),
а за y - значения скорингового балла (то есть, ks - целевая переменная).
Произвести расчет как с использованием intercept, так и без.
"""

import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as st

x = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
y = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])
n = 10

b1 = (np.mean(x * y) - np.mean(x) * np.mean(y)) / (np.mean(x**2) - np.mean(x) ** 2)
print('b1', b1)
b0 = np.mean(y) - b1 * np.mean(x)
print('b0', b0)
print('y =', b0, '+', b1, '* x')

res = st.linregress(x, y)
print(res.intercept, '+', res.slope, '*x', 'mse=', res.stderr)



plt.plot(x, y, 'o', label='original data')
plt.plot(x, b0 + b1*x, 'r', label='fitted line')
plt.legend()
plt.show()

# b1 2.620538882402765
# b0 444.1773573243596
# y = 444.1773573243596 + 2.620538882402765 * x
# 444.17735732435955 + 2.6205388824027653 *x mse= 0.4810827956851602
